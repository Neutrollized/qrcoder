---
steps:
- id: 'Lint Dockerfile'
  name: 'ghcr.io/hadolint/hadolint'
  entrypoint: '/bin/hadolint'
  args: ['cloud-run/Dockerfile']
- id: 'Build container image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO_NAME}/qrcoder:${COMMIT_SHA}', '.']
- id: 'Image efficiency scan'
  name: 'quay.io/wagoodman/dive'
  args: ['--ci', '${_GAR_REGION}-docker.pkg.dev/$PROJECT_ID/${_GAR_REPO_NAME}/qrcoder:$COMMIT_SHA']
- id: 'Image security scan'
  name: 'aquasec/trivy:latest'
  args: ['image', '--severity', 'HIGH,CRITICAL', '--exit-code', '1', '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO_NAME}/qrcoder:${COMMIT_SHA}']
- id: 'Push container image to GAR'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO_NAME}/qrcoder:${COMMIT_SHA}']
- id: 'Deploy to Cloud Run'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'beta'
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'
  - '--allow-unauthenticated'
  - '--ingress'
  - '${_INGRESS}'
  - '--execution-environment'
  - '${_EXECUTION_ENVIRONMENT}'
  - '--concurrency'
  - '10'
  - '--cpu'
  - '1'
  - '--memory'
  - '128Mi'
  - '--cpu-boost'
  - '--image'
  - '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO_NAME}/qrcoder:${COMMIT_SHA}'
  - '--region'
  - '${_REGION}'
  - '--min-instances'
  - '0'
  - '--max-instances'
  - '1'
  - '--platform'
  - 'managed'
  - '--port'
  - '80'
  - '--service-account'
  - '${_SERVICE_ACCOUNT_EMAIL}'
  - '--set-env-vars'
  - 'GOOGLE_PROJECT=${PROJECT_ID},QRCODER_APP_GCS=${_GCS_BUCKET_NAME}'
  - '--timeout'
  - '300'
serviceAccount: '${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com'
images:
- '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO_NAME}/qrcoder:${COMMIT_SHA}'
